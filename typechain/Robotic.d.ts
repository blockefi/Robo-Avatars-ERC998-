/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface RoboticInterface extends ethers.utils.Interface {
  functions: {
    "_buildDomainSeparator(bytes32,bytes32,bytes32)": FunctionFragment;
    "_domainSeparatorV4()": FunctionFragment;
    "_hash(tuple)": FunctionFragment;
    "_hashTypedDataV4(bytes32)": FunctionFragment;
    "addItems(uint256,uint256[])": FunctionFragment;
    "changeAddresses(uint256,address)": FunctionFragment;
    "check()": FunctionFragment;
    "childCount(uint256)": FunctionFragment;
    "childPrice()": FunctionFragment;
    "conversion(address)": FunctionFragment;
    "createItems(uint256[],uint256[],string[])": FunctionFragment;
    "createTorso(uint256[],string[])": FunctionFragment;
    "getChainID()": FunctionFragment;
    "initialize(address,address,address,uint256,uint256)": FunctionFragment;
    "items()": FunctionFragment;
    "owner()": FunctionFragment;
    "parentPrice()": FunctionFragment;
    "parentToChild(uint256,uint256)": FunctionFragment;
    "redeemItems(tuple[])": FunctionFragment;
    "redeemTorso(tuple[])": FunctionFragment;
    "removeItems(uint256,uint256[])": FunctionFragment;
    "setItemPrice(uint256)": FunctionFragment;
    "setItemURI(uint256,string)": FunctionFragment;
    "setSession(bool)": FunctionFragment;
    "setTorsoPrice(uint256)": FunctionFragment;
    "setTorsoURI(uint256,string)": FunctionFragment;
    "torso()": FunctionFragment;
    "transferItem(address,uint256,uint256)": FunctionFragment;
    "transferItemsInBatch(address,uint256[],uint256[])": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "transferTorso(address,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "_buildDomainSeparator",
    values: [BytesLike, BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "_domainSeparatorV4",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_hash",
    values: [
      {
        tokenId: BigNumberish;
        wallet: BigNumberish;
        uri: string;
        signature: BytesLike;
      }
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "_hashTypedDataV4",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "addItems",
    values: [BigNumberish, BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "changeAddresses",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(functionFragment: "check", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "childCount",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "childPrice",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "conversion", values: [string]): string;
  encodeFunctionData(
    functionFragment: "createItems",
    values: [BigNumberish[], BigNumberish[], string[]]
  ): string;
  encodeFunctionData(
    functionFragment: "createTorso",
    values: [BigNumberish[], string[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getChainID",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [string, string, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "items", values?: undefined): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "parentPrice",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "parentToChild",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "redeemItems",
    values: [
      {
        tokenId: BigNumberish;
        wallet: BigNumberish;
        uri: string;
        signature: BytesLike;
      }[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "redeemTorso",
    values: [
      {
        tokenId: BigNumberish;
        wallet: BigNumberish;
        uri: string;
        signature: BytesLike;
      }[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "removeItems",
    values: [BigNumberish, BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "setItemPrice",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setItemURI",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(functionFragment: "setSession", values: [boolean]): string;
  encodeFunctionData(
    functionFragment: "setTorsoPrice",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setTorsoURI",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(functionFragment: "torso", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "transferItem",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferItemsInBatch",
    values: [string, BigNumberish[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "transferTorso",
    values: [string, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "_buildDomainSeparator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_domainSeparatorV4",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "_hash", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "_hashTypedDataV4",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "addItems", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "changeAddresses",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "check", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "childCount", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "childPrice", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "conversion", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "createItems",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createTorso",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getChainID", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "items", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "parentPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "parentToChild",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "redeemItems",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "redeemTorso",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeItems",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setItemPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setItemURI", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setSession", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setTorsoPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setTorsoURI",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "torso", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferItem",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferItemsInBatch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferTorso",
    data: BytesLike
  ): Result;

  events: {
    "OwnershipTransferred(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
}

export class Robotic extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: RoboticInterface;

  functions: {
    _buildDomainSeparator(
      typeHash: BytesLike,
      name: BytesLike,
      version: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "_buildDomainSeparator(bytes32,bytes32,bytes32)"(
      typeHash: BytesLike,
      name: BytesLike,
      version: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    _domainSeparatorV4(overrides?: CallOverrides): Promise<[string]>;

    "_domainSeparatorV4()"(overrides?: CallOverrides): Promise<[string]>;

    _hash(
      voucher: {
        tokenId: BigNumberish;
        wallet: BigNumberish;
        uri: string;
        signature: BytesLike;
      },
      overrides?: CallOverrides
    ): Promise<[string]>;

    "_hash((uint256,uint160,string,bytes))"(
      voucher: {
        tokenId: BigNumberish;
        wallet: BigNumberish;
        uri: string;
        signature: BytesLike;
      },
      overrides?: CallOverrides
    ): Promise<[string]>;

    _hashTypedDataV4(
      structHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "_hashTypedDataV4(bytes32)"(
      structHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    addItems(
      _parentId: BigNumberish,
      equippeditems: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "addItems(uint256,uint256[])"(
      _parentId: BigNumberish,
      equippeditems: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    changeAddresses(
      id: BigNumberish,
      _changedAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "changeAddresses(uint256,address)"(
      id: BigNumberish,
      _changedAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    check(
      overrides?: CallOverrides
    ): Promise<[string, string, string, string, BigNumber, string]>;

    "check()"(
      overrides?: CallOverrides
    ): Promise<[string, string, string, string, BigNumber, string]>;

    childCount(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "childCount(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    childPrice(overrides?: CallOverrides): Promise<[BigNumber]>;

    "childPrice()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    conversion(to: string, overrides?: CallOverrides): Promise<[BigNumber]>;

    "conversion(address)"(
      to: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    createItems(
      tokenId: BigNumberish[],
      itemAmounts: BigNumberish[],
      itemURI: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "createItems(uint256[],uint256[],string[])"(
      tokenId: BigNumberish[],
      itemAmounts: BigNumberish[],
      itemURI: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    createTorso(
      tokenId: BigNumberish[],
      torsoURI: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "createTorso(uint256[],string[])"(
      tokenId: BigNumberish[],
      torsoURI: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getChainID(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getChainID()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    initialize(
      _owner: string,
      _torso: string,
      _item: string,
      _parentPrice: BigNumberish,
      _childPrice: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "initialize(address,address,address,uint256,uint256)"(
      _owner: string,
      _torso: string,
      _item: string,
      _parentPrice: BigNumberish,
      _childPrice: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    items(overrides?: CallOverrides): Promise<[string]>;

    "items()"(overrides?: CallOverrides): Promise<[string]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    "owner()"(overrides?: CallOverrides): Promise<[string]>;

    parentPrice(overrides?: CallOverrides): Promise<[BigNumber]>;

    "parentPrice()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    parentToChild(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "parentToChild(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    redeemItems(
      voucher: {
        tokenId: BigNumberish;
        wallet: BigNumberish;
        uri: string;
        signature: BytesLike;
      }[],
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "redeemItems(tuple[])"(
      voucher: {
        tokenId: BigNumberish;
        wallet: BigNumberish;
        uri: string;
        signature: BytesLike;
      }[],
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    redeemTorso(
      voucher: {
        tokenId: BigNumberish;
        wallet: BigNumberish;
        uri: string;
        signature: BytesLike;
      }[],
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "redeemTorso(tuple[])"(
      voucher: {
        tokenId: BigNumberish;
        wallet: BigNumberish;
        uri: string;
        signature: BytesLike;
      }[],
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    removeItems(
      _parentId: BigNumberish,
      unequippedItems: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "removeItems(uint256,uint256[])"(
      _parentId: BigNumberish,
      unequippedItems: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setItemPrice(
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setItemPrice(uint256)"(
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setItemURI(
      id: BigNumberish,
      uri_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setItemURI(uint256,string)"(
      id: BigNumberish,
      uri_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setSession(
      flag: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setSession(bool)"(
      flag: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setTorsoPrice(
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setTorsoPrice(uint256)"(
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setTorsoURI(
      id: BigNumberish,
      uri_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setTorsoURI(uint256,string)"(
      id: BigNumberish,
      uri_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    torso(overrides?: CallOverrides): Promise<[string]>;

    "torso()"(overrides?: CallOverrides): Promise<[string]>;

    transferItem(
      to: string,
      _childId: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "transferItem(address,uint256,uint256)"(
      to: string,
      _childId: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    transferItemsInBatch(
      to: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "transferItemsInBatch(address,uint256[],uint256[])"(
      to: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    transferTorso(
      to: string,
      _parentId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "transferTorso(address,uint256)"(
      to: string,
      _parentId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  _buildDomainSeparator(
    typeHash: BytesLike,
    name: BytesLike,
    version: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  "_buildDomainSeparator(bytes32,bytes32,bytes32)"(
    typeHash: BytesLike,
    name: BytesLike,
    version: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  _domainSeparatorV4(overrides?: CallOverrides): Promise<string>;

  "_domainSeparatorV4()"(overrides?: CallOverrides): Promise<string>;

  _hash(
    voucher: {
      tokenId: BigNumberish;
      wallet: BigNumberish;
      uri: string;
      signature: BytesLike;
    },
    overrides?: CallOverrides
  ): Promise<string>;

  "_hash((uint256,uint160,string,bytes))"(
    voucher: {
      tokenId: BigNumberish;
      wallet: BigNumberish;
      uri: string;
      signature: BytesLike;
    },
    overrides?: CallOverrides
  ): Promise<string>;

  _hashTypedDataV4(
    structHash: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  "_hashTypedDataV4(bytes32)"(
    structHash: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  addItems(
    _parentId: BigNumberish,
    equippeditems: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "addItems(uint256,uint256[])"(
    _parentId: BigNumberish,
    equippeditems: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  changeAddresses(
    id: BigNumberish,
    _changedAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "changeAddresses(uint256,address)"(
    id: BigNumberish,
    _changedAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  check(
    overrides?: CallOverrides
  ): Promise<[string, string, string, string, BigNumber, string]>;

  "check()"(
    overrides?: CallOverrides
  ): Promise<[string, string, string, string, BigNumber, string]>;

  childCount(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

  "childCount(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  childPrice(overrides?: CallOverrides): Promise<BigNumber>;

  "childPrice()"(overrides?: CallOverrides): Promise<BigNumber>;

  conversion(to: string, overrides?: CallOverrides): Promise<BigNumber>;

  "conversion(address)"(
    to: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  createItems(
    tokenId: BigNumberish[],
    itemAmounts: BigNumberish[],
    itemURI: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "createItems(uint256[],uint256[],string[])"(
    tokenId: BigNumberish[],
    itemAmounts: BigNumberish[],
    itemURI: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  createTorso(
    tokenId: BigNumberish[],
    torsoURI: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "createTorso(uint256[],string[])"(
    tokenId: BigNumberish[],
    torsoURI: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getChainID(overrides?: CallOverrides): Promise<BigNumber>;

  "getChainID()"(overrides?: CallOverrides): Promise<BigNumber>;

  initialize(
    _owner: string,
    _torso: string,
    _item: string,
    _parentPrice: BigNumberish,
    _childPrice: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "initialize(address,address,address,uint256,uint256)"(
    _owner: string,
    _torso: string,
    _item: string,
    _parentPrice: BigNumberish,
    _childPrice: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  items(overrides?: CallOverrides): Promise<string>;

  "items()"(overrides?: CallOverrides): Promise<string>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  parentPrice(overrides?: CallOverrides): Promise<BigNumber>;

  "parentPrice()"(overrides?: CallOverrides): Promise<BigNumber>;

  parentToChild(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "parentToChild(uint256,uint256)"(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  redeemItems(
    voucher: {
      tokenId: BigNumberish;
      wallet: BigNumberish;
      uri: string;
      signature: BytesLike;
    }[],
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "redeemItems(tuple[])"(
    voucher: {
      tokenId: BigNumberish;
      wallet: BigNumberish;
      uri: string;
      signature: BytesLike;
    }[],
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  redeemTorso(
    voucher: {
      tokenId: BigNumberish;
      wallet: BigNumberish;
      uri: string;
      signature: BytesLike;
    }[],
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "redeemTorso(tuple[])"(
    voucher: {
      tokenId: BigNumberish;
      wallet: BigNumberish;
      uri: string;
      signature: BytesLike;
    }[],
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  removeItems(
    _parentId: BigNumberish,
    unequippedItems: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "removeItems(uint256,uint256[])"(
    _parentId: BigNumberish,
    unequippedItems: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setItemPrice(
    value: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setItemPrice(uint256)"(
    value: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setItemURI(
    id: BigNumberish,
    uri_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setItemURI(uint256,string)"(
    id: BigNumberish,
    uri_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setSession(
    flag: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setSession(bool)"(
    flag: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setTorsoPrice(
    value: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setTorsoPrice(uint256)"(
    value: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setTorsoURI(
    id: BigNumberish,
    uri_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setTorsoURI(uint256,string)"(
    id: BigNumberish,
    uri_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  torso(overrides?: CallOverrides): Promise<string>;

  "torso()"(overrides?: CallOverrides): Promise<string>;

  transferItem(
    to: string,
    _childId: BigNumberish,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "transferItem(address,uint256,uint256)"(
    to: string,
    _childId: BigNumberish,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  transferItemsInBatch(
    to: string,
    ids: BigNumberish[],
    amounts: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "transferItemsInBatch(address,uint256[],uint256[])"(
    to: string,
    ids: BigNumberish[],
    amounts: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  transferTorso(
    to: string,
    _parentId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "transferTorso(address,uint256)"(
    to: string,
    _parentId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    _buildDomainSeparator(
      typeHash: BytesLike,
      name: BytesLike,
      version: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "_buildDomainSeparator(bytes32,bytes32,bytes32)"(
      typeHash: BytesLike,
      name: BytesLike,
      version: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    _domainSeparatorV4(overrides?: CallOverrides): Promise<string>;

    "_domainSeparatorV4()"(overrides?: CallOverrides): Promise<string>;

    _hash(
      voucher: {
        tokenId: BigNumberish;
        wallet: BigNumberish;
        uri: string;
        signature: BytesLike;
      },
      overrides?: CallOverrides
    ): Promise<string>;

    "_hash((uint256,uint160,string,bytes))"(
      voucher: {
        tokenId: BigNumberish;
        wallet: BigNumberish;
        uri: string;
        signature: BytesLike;
      },
      overrides?: CallOverrides
    ): Promise<string>;

    _hashTypedDataV4(
      structHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "_hashTypedDataV4(bytes32)"(
      structHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    addItems(
      _parentId: BigNumberish,
      equippeditems: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    "addItems(uint256,uint256[])"(
      _parentId: BigNumberish,
      equippeditems: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    changeAddresses(
      id: BigNumberish,
      _changedAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "changeAddresses(uint256,address)"(
      id: BigNumberish,
      _changedAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    check(
      overrides?: CallOverrides
    ): Promise<[string, string, string, string, BigNumber, string]>;

    "check()"(
      overrides?: CallOverrides
    ): Promise<[string, string, string, string, BigNumber, string]>;

    childCount(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "childCount(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    childPrice(overrides?: CallOverrides): Promise<BigNumber>;

    "childPrice()"(overrides?: CallOverrides): Promise<BigNumber>;

    conversion(to: string, overrides?: CallOverrides): Promise<BigNumber>;

    "conversion(address)"(
      to: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    createItems(
      tokenId: BigNumberish[],
      itemAmounts: BigNumberish[],
      itemURI: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    "createItems(uint256[],uint256[],string[])"(
      tokenId: BigNumberish[],
      itemAmounts: BigNumberish[],
      itemURI: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    createTorso(
      tokenId: BigNumberish[],
      torsoURI: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    "createTorso(uint256[],string[])"(
      tokenId: BigNumberish[],
      torsoURI: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    getChainID(overrides?: CallOverrides): Promise<BigNumber>;

    "getChainID()"(overrides?: CallOverrides): Promise<BigNumber>;

    initialize(
      _owner: string,
      _torso: string,
      _item: string,
      _parentPrice: BigNumberish,
      _childPrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "initialize(address,address,address,uint256,uint256)"(
      _owner: string,
      _torso: string,
      _item: string,
      _parentPrice: BigNumberish,
      _childPrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    items(overrides?: CallOverrides): Promise<string>;

    "items()"(overrides?: CallOverrides): Promise<string>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    parentPrice(overrides?: CallOverrides): Promise<BigNumber>;

    "parentPrice()"(overrides?: CallOverrides): Promise<BigNumber>;

    parentToChild(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "parentToChild(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    redeemItems(
      voucher: {
        tokenId: BigNumberish;
        wallet: BigNumberish;
        uri: string;
        signature: BytesLike;
      }[],
      overrides?: CallOverrides
    ): Promise<void>;

    "redeemItems(tuple[])"(
      voucher: {
        tokenId: BigNumberish;
        wallet: BigNumberish;
        uri: string;
        signature: BytesLike;
      }[],
      overrides?: CallOverrides
    ): Promise<void>;

    redeemTorso(
      voucher: {
        tokenId: BigNumberish;
        wallet: BigNumberish;
        uri: string;
        signature: BytesLike;
      }[],
      overrides?: CallOverrides
    ): Promise<void>;

    "redeemTorso(tuple[])"(
      voucher: {
        tokenId: BigNumberish;
        wallet: BigNumberish;
        uri: string;
        signature: BytesLike;
      }[],
      overrides?: CallOverrides
    ): Promise<void>;

    removeItems(
      _parentId: BigNumberish,
      unequippedItems: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    "removeItems(uint256,uint256[])"(
      _parentId: BigNumberish,
      unequippedItems: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    setItemPrice(value: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "setItemPrice(uint256)"(
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setItemURI(
      id: BigNumberish,
      uri_: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setItemURI(uint256,string)"(
      id: BigNumberish,
      uri_: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setSession(flag: boolean, overrides?: CallOverrides): Promise<void>;

    "setSession(bool)"(flag: boolean, overrides?: CallOverrides): Promise<void>;

    setTorsoPrice(
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setTorsoPrice(uint256)"(
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setTorsoURI(
      id: BigNumberish,
      uri_: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setTorsoURI(uint256,string)"(
      id: BigNumberish,
      uri_: string,
      overrides?: CallOverrides
    ): Promise<void>;

    torso(overrides?: CallOverrides): Promise<string>;

    "torso()"(overrides?: CallOverrides): Promise<string>;

    transferItem(
      to: string,
      _childId: BigNumberish,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferItem(address,uint256,uint256)"(
      to: string,
      _childId: BigNumberish,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    transferItemsInBatch(
      to: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    "transferItemsInBatch(address,uint256[],uint256[])"(
      to: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    transferTorso(
      to: string,
      _parentId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferTorso(address,uint256)"(
      to: string,
      _parentId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    OwnershipTransferred(
      previousOwner: null,
      newOwner: null
    ): TypedEventFilter<
      [string, string],
      { previousOwner: string; newOwner: string }
    >;
  };

  estimateGas: {
    _buildDomainSeparator(
      typeHash: BytesLike,
      name: BytesLike,
      version: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "_buildDomainSeparator(bytes32,bytes32,bytes32)"(
      typeHash: BytesLike,
      name: BytesLike,
      version: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _domainSeparatorV4(overrides?: CallOverrides): Promise<BigNumber>;

    "_domainSeparatorV4()"(overrides?: CallOverrides): Promise<BigNumber>;

    _hash(
      voucher: {
        tokenId: BigNumberish;
        wallet: BigNumberish;
        uri: string;
        signature: BytesLike;
      },
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "_hash((uint256,uint160,string,bytes))"(
      voucher: {
        tokenId: BigNumberish;
        wallet: BigNumberish;
        uri: string;
        signature: BytesLike;
      },
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _hashTypedDataV4(
      structHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "_hashTypedDataV4(bytes32)"(
      structHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    addItems(
      _parentId: BigNumberish,
      equippeditems: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "addItems(uint256,uint256[])"(
      _parentId: BigNumberish,
      equippeditems: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    changeAddresses(
      id: BigNumberish,
      _changedAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "changeAddresses(uint256,address)"(
      id: BigNumberish,
      _changedAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    check(overrides?: CallOverrides): Promise<BigNumber>;

    "check()"(overrides?: CallOverrides): Promise<BigNumber>;

    childCount(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "childCount(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    childPrice(overrides?: CallOverrides): Promise<BigNumber>;

    "childPrice()"(overrides?: CallOverrides): Promise<BigNumber>;

    conversion(to: string, overrides?: CallOverrides): Promise<BigNumber>;

    "conversion(address)"(
      to: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    createItems(
      tokenId: BigNumberish[],
      itemAmounts: BigNumberish[],
      itemURI: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "createItems(uint256[],uint256[],string[])"(
      tokenId: BigNumberish[],
      itemAmounts: BigNumberish[],
      itemURI: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    createTorso(
      tokenId: BigNumberish[],
      torsoURI: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "createTorso(uint256[],string[])"(
      tokenId: BigNumberish[],
      torsoURI: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getChainID(overrides?: CallOverrides): Promise<BigNumber>;

    "getChainID()"(overrides?: CallOverrides): Promise<BigNumber>;

    initialize(
      _owner: string,
      _torso: string,
      _item: string,
      _parentPrice: BigNumberish,
      _childPrice: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "initialize(address,address,address,uint256,uint256)"(
      _owner: string,
      _torso: string,
      _item: string,
      _parentPrice: BigNumberish,
      _childPrice: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    items(overrides?: CallOverrides): Promise<BigNumber>;

    "items()"(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    parentPrice(overrides?: CallOverrides): Promise<BigNumber>;

    "parentPrice()"(overrides?: CallOverrides): Promise<BigNumber>;

    parentToChild(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "parentToChild(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    redeemItems(
      voucher: {
        tokenId: BigNumberish;
        wallet: BigNumberish;
        uri: string;
        signature: BytesLike;
      }[],
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "redeemItems(tuple[])"(
      voucher: {
        tokenId: BigNumberish;
        wallet: BigNumberish;
        uri: string;
        signature: BytesLike;
      }[],
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    redeemTorso(
      voucher: {
        tokenId: BigNumberish;
        wallet: BigNumberish;
        uri: string;
        signature: BytesLike;
      }[],
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "redeemTorso(tuple[])"(
      voucher: {
        tokenId: BigNumberish;
        wallet: BigNumberish;
        uri: string;
        signature: BytesLike;
      }[],
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    removeItems(
      _parentId: BigNumberish,
      unequippedItems: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "removeItems(uint256,uint256[])"(
      _parentId: BigNumberish,
      unequippedItems: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setItemPrice(
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setItemPrice(uint256)"(
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setItemURI(
      id: BigNumberish,
      uri_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setItemURI(uint256,string)"(
      id: BigNumberish,
      uri_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setSession(
      flag: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setSession(bool)"(
      flag: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setTorsoPrice(
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setTorsoPrice(uint256)"(
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setTorsoURI(
      id: BigNumberish,
      uri_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setTorsoURI(uint256,string)"(
      id: BigNumberish,
      uri_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    torso(overrides?: CallOverrides): Promise<BigNumber>;

    "torso()"(overrides?: CallOverrides): Promise<BigNumber>;

    transferItem(
      to: string,
      _childId: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "transferItem(address,uint256,uint256)"(
      to: string,
      _childId: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    transferItemsInBatch(
      to: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "transferItemsInBatch(address,uint256[],uint256[])"(
      to: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    transferTorso(
      to: string,
      _parentId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "transferTorso(address,uint256)"(
      to: string,
      _parentId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    _buildDomainSeparator(
      typeHash: BytesLike,
      name: BytesLike,
      version: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "_buildDomainSeparator(bytes32,bytes32,bytes32)"(
      typeHash: BytesLike,
      name: BytesLike,
      version: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _domainSeparatorV4(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "_domainSeparatorV4()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _hash(
      voucher: {
        tokenId: BigNumberish;
        wallet: BigNumberish;
        uri: string;
        signature: BytesLike;
      },
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "_hash((uint256,uint160,string,bytes))"(
      voucher: {
        tokenId: BigNumberish;
        wallet: BigNumberish;
        uri: string;
        signature: BytesLike;
      },
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _hashTypedDataV4(
      structHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "_hashTypedDataV4(bytes32)"(
      structHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    addItems(
      _parentId: BigNumberish,
      equippeditems: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "addItems(uint256,uint256[])"(
      _parentId: BigNumberish,
      equippeditems: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    changeAddresses(
      id: BigNumberish,
      _changedAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "changeAddresses(uint256,address)"(
      id: BigNumberish,
      _changedAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    check(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "check()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    childCount(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "childCount(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    childPrice(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "childPrice()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    conversion(
      to: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "conversion(address)"(
      to: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    createItems(
      tokenId: BigNumberish[],
      itemAmounts: BigNumberish[],
      itemURI: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "createItems(uint256[],uint256[],string[])"(
      tokenId: BigNumberish[],
      itemAmounts: BigNumberish[],
      itemURI: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    createTorso(
      tokenId: BigNumberish[],
      torsoURI: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "createTorso(uint256[],string[])"(
      tokenId: BigNumberish[],
      torsoURI: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getChainID(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getChainID()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    initialize(
      _owner: string,
      _torso: string,
      _item: string,
      _parentPrice: BigNumberish,
      _childPrice: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "initialize(address,address,address,uint256,uint256)"(
      _owner: string,
      _torso: string,
      _item: string,
      _parentPrice: BigNumberish,
      _childPrice: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    items(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "items()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    parentPrice(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "parentPrice()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    parentToChild(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "parentToChild(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    redeemItems(
      voucher: {
        tokenId: BigNumberish;
        wallet: BigNumberish;
        uri: string;
        signature: BytesLike;
      }[],
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "redeemItems(tuple[])"(
      voucher: {
        tokenId: BigNumberish;
        wallet: BigNumberish;
        uri: string;
        signature: BytesLike;
      }[],
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    redeemTorso(
      voucher: {
        tokenId: BigNumberish;
        wallet: BigNumberish;
        uri: string;
        signature: BytesLike;
      }[],
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "redeemTorso(tuple[])"(
      voucher: {
        tokenId: BigNumberish;
        wallet: BigNumberish;
        uri: string;
        signature: BytesLike;
      }[],
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    removeItems(
      _parentId: BigNumberish,
      unequippedItems: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "removeItems(uint256,uint256[])"(
      _parentId: BigNumberish,
      unequippedItems: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setItemPrice(
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setItemPrice(uint256)"(
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setItemURI(
      id: BigNumberish,
      uri_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setItemURI(uint256,string)"(
      id: BigNumberish,
      uri_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setSession(
      flag: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setSession(bool)"(
      flag: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setTorsoPrice(
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setTorsoPrice(uint256)"(
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setTorsoURI(
      id: BigNumberish,
      uri_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setTorsoURI(uint256,string)"(
      id: BigNumberish,
      uri_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    torso(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "torso()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    transferItem(
      to: string,
      _childId: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "transferItem(address,uint256,uint256)"(
      to: string,
      _childId: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    transferItemsInBatch(
      to: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "transferItemsInBatch(address,uint256[],uint256[])"(
      to: string,
      ids: BigNumberish[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    transferTorso(
      to: string,
      _parentId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "transferTorso(address,uint256)"(
      to: string,
      _parentId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
