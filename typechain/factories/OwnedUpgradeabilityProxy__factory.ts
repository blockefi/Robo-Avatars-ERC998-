/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { OwnedUpgradeabilityProxy } from "../OwnedUpgradeabilityProxy";

export class OwnedUpgradeabilityProxy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OwnedUpgradeabilityProxy> {
    return super.deploy(overrides || {}) as Promise<OwnedUpgradeabilityProxy>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OwnedUpgradeabilityProxy {
    return super.attach(address) as OwnedUpgradeabilityProxy;
  }
  connect(signer: Signer): OwnedUpgradeabilityProxy__factory {
    return super.connect(signer) as OwnedUpgradeabilityProxy__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OwnedUpgradeabilityProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OwnedUpgradeabilityProxy;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "ProxyOwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maintenance",
    outputs: [
      {
        internalType: "bool",
        name: "_maintenance",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyOwner",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_maintenance",
        type: "bool",
      },
    ],
    name: "setMaintenance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferProxyOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506100203361002560201b60201c565b610051565b60007f85bd7031deaf76b80f9733e7da132fe310adf86a8e73260691b76988b4b7e35d90508181555050565b610ca0806100606000396000f3fe6080604052600436106100745760003560e01c80635c60da1b1161004e5780635c60da1b146100fd578063612f2f37146101285780636c376cc514610151578063f1739cae1461017c57610083565b8063025313a21461008d5780633659cfe6146100b85780634f1ef286146100e157610083565b36610083576100816101a5565b005b61008b6101a5565b005b34801561009957600080fd5b506100a26102cb565b6040516100af9190610a66565b60405180910390f35b3480156100c457600080fd5b506100df60048036038101906100da919061088e565b6102f9565b005b6100fb60048036038101906100f691906108b7565b61037a565b005b34801561010957600080fd5b506101126104ab565b60405161011f9190610a66565b60405180910390f35b34801561013457600080fd5b5061014f600480360381019061014a919061090b565b6104d9565b005b34801561015d57600080fd5b5061016661057a565b6040516101739190610aaa565b60405180910390f35b34801561018857600080fd5b506101a3600480360381019061019e919061088e565b6105a8565b005b6101ad61057a565b15610228576101ba6102cb565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e90610ae5565b60405180910390fd5b5b60006102326104ab565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156102a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029b90610ac5565b60405180910390fd5b60405136600082376000803683855af43d806000843e81600081146102c7578184f35b8184fd5b6000807f85bd7031deaf76b80f9733e7da132fe310adf86a8e73260691b76988b4b7e35d9050805491505090565b6103016102cb565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036590610ae5565b60405180910390fd5b610377816106d9565b50565b6103826102cb565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e690610ae5565b60405180910390fd5b6103f8826102f9565b60003073ffffffffffffffffffffffffffffffffffffffff1634836040516104209190610a4f565b60006040518083038185875af1925050503d806000811461045d576040519150601f19603f3d011682016040523d82523d6000602084013e610462565b606091505b50509050806104a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049d90610ac5565b60405180910390fd5b505050565b6000807ff968882b178b4a61d620bde63916829c95f3e1b54eb01ef03837ff1b870f40769050805491505090565b6104e16102cb565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461054e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054590610ae5565b60405180910390fd5b60007fce60c5db904241f4fe710c6b7d7c2e6f59bb4f2afc9ad1549ac9b29eb7f522b690508181555050565b6000807fce60c5db904241f4fe710c6b7d7c2e6f59bb4f2afc9ad1549ac9b29eb7f522b69050805491505090565b6105b06102cb565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461061d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061490610ae5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561068d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068490610ac5565b60405180910390fd5b7f5a3e66efaa1e445ebd894728a69d6959842ea1e97bd79b892797106e270efcd96106b66102cb565b826040516106c5929190610a81565b60405180910390a16106d6816107a4565b50565b60006106e36104ab565b90508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610754576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074b90610ac5565b60405180910390fd5b61075d826107d0565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25050565b60007f85bd7031deaf76b80f9733e7da132fe310adf86a8e73260691b76988b4b7e35d90508181555050565b60007ff968882b178b4a61d620bde63916829c95f3e1b54eb01ef03837ff1b870f407690508181555050565b600061080f61080a84610b36565b610b05565b90508281526020810184848401111561082757600080fd5b610832848285610bcb565b509392505050565b60008135905061084981610c3c565b92915050565b60008135905061085e81610c53565b92915050565b600082601f83011261087557600080fd5b81356108858482602086016107fc565b91505092915050565b6000602082840312156108a057600080fd5b60006108ae8482850161083a565b91505092915050565b600080604083850312156108ca57600080fd5b60006108d88582860161083a565b925050602083013567ffffffffffffffff8111156108f557600080fd5b61090185828601610864565b9150509250929050565b60006020828403121561091d57600080fd5b600061092b8482850161084f565b91505092915050565b61093d81610b8d565b82525050565b61094c81610b9f565b82525050565b600061095d82610b66565b6109678185610b71565b9350610977818560208601610bda565b80840191505092915050565b6000610990602183610b7c565b91507f4f776e6564557067726164656162696c69747950726f78793a20494e56414c4960008301527f44000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006109f6602383610b7c565b91507f4f776e6564557067726164656162696c69747950726f78793a20464f5242494460008301527f44454e00000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610a5b8284610952565b915081905092915050565b6000602082019050610a7b6000830184610934565b92915050565b6000604082019050610a966000830185610934565b610aa36020830184610934565b9392505050565b6000602082019050610abf6000830184610943565b92915050565b60006020820190508181036000830152610ade81610983565b9050919050565b60006020820190508181036000830152610afe816109e9565b9050919050565b6000604051905081810181811067ffffffffffffffff82111715610b2c57610b2b610c0d565b5b8060405250919050565b600067ffffffffffffffff821115610b5157610b50610c0d565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610b9882610bab565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610bf8578082015181840152602081019050610bdd565b83811115610c07576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610c4581610b8d565b8114610c5057600080fd5b50565b610c5c81610b9f565b8114610c6757600080fd5b5056fea2646970667358221220d351c77b0f8becabd8ee7257f1fa00073624fde3856e92ef43ef5d69a3b5151264736f6c63430008000033";
